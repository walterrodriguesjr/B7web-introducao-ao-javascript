https://alunos.b7web.com.br/curso/javascript/js-introducao-ao-javascript

módulo 1 - primeiros passos 

1-introdução ao javascript 
-javascript serve para realizar ações em uma aplicação, dar vida a um site, projeto etc...
-trasportar dados no lado do usuário 
-pode rodar também hoje no lado do servidor 

2-como vamos programar JS 
-explicação do vs code, do dev tools, do navegador 
-o console, do dev tolls é a principal area para JS

3-inserindo o arquivo JS na página 
-link de script sempre no final do body do HTML, para que primeiro toda página HTML e CSS seja carregada 

4-hello world 
-imprimindo alert e console.log 

5-variáveis 
-variáveis servem para armazenar dados na memória, para uso posteriormente ou não 

6-tipos de dados 
-string, number, boolean, array, objeto.

7-comentário no código 
-seleciona todo conteúdo a ser  comentários e SHIFT + ALT e F 
- // por linha 

8-exercício de variáveis #1 
-ok

9-ponto e vírgula 
-o ponto e vírgula serve para identificar o fim de um trecho de código 

10-let, const, var 
-var e let, permitem terem seus valores redefinidos após criadas, a const não.
-a var, funciona em qualquer contexto, o let somente no contexto em que foi criada 

11-operações em variáveis 
-operações aritméticas com variáveis que sejam numbers 
-concatenação de variáveis

12-string e template string 
-template é uma string onde se permite fazer operações dentro da mesma, usando crase

13-condicional if/else 
-if= se 
-else - senão

14-condcional == e === 
- == é igual em valor 
- === é igual em valor e tipo de dado 

15-multi-condicionais (&& e ||)
-uso de condicionais com && e / || ou 

16-condicional dulpa (if else)
-uso do else if já realizado na aula 15 

17-desmistificando o if 
- mais exemplos do uso de if 

18-exercício de condicional #2 
- exercícios realizados 

19-condicional ternário 
- o condicional ternário é um if feito em uma linha só 
- realizado exemplos 

20-switch 
-o switch possibilita fazer testes condicionais com uma lista de opções definidas 


módulo 2 - javascript básico 

1-introdução a funções 
-uma função é um comando de ação pré definido, para realizar aquilo que está dentro dela 
-pode ser reutilizada quantas vezes for necessário ou chamada 

2-declarando uma função 
-exemplo como criar uma função 

3-como usar uma função 
-exemplo de como usar a função criada 

4-passando parâmetros em funções 
-são dados dentro dos parenteses das funções, que recebem os valores inseridos no momento em que a função é chamada 

5-retorno da função 
-o return serve para devolver dados (retornar) para aquele que chamou a função 
-o retorno precisa ir para algum lugar, uma variável por exemplo

6-função com retorno condicional 
-realizado testes usando IF ELSE dentro das function 

7-exercício de funções #4
-ok

8-exercício de funções #5 
-ok

9-exercício de funções #6(mais fácil)
-ok 

10-arrow function 
-é uma forma diferente para definir uma função 

11-variáveis dentro de funções 
-variavel criada em escopo global pode ser usada dentro ou fora de uma função 

12-funções dentro de funções 
-quando usamos uma função dentro da outra, ao invocar a primeira, automaticamente estamos tendo uso 
    a função que está dentro desta 

13-introdução a array 
-array é uma variável que serve para armazenar uma lista de dados 

14-operações básicas de arrays 
-usando métodos que removem e ou adicionam items no final ou começo do array 

15-exercício de array #7 
-realizado os exercícios com array

16-o que são objetos? 
-trabalho com chave e valor (key e value)

17-acessando e alterando objetos 
-no caso de objetos usa-se o ponto para ir acessando por efeito cascada 
    ex: personagem.nome 

18-função dentro de objetos 
-as propridades dentro de um objeto podem receber uma função, que inclusive, podem ser usadas 
    para chamar propridades que estão dentro deste prórpio objeto, usando o this. 

19-o loop for 
- loop serve para que determinado código seja executado repetidas vezes programadas 
-o for, executa algo usando 3 diretivas: o inicio da variavel em questão, até quando será feito, e o que será feito 

20-dando loop em array 
-usado vários tipos de sintáxe de como realizar um loop (usando in, of, etc...)

21-o loop while 
-menos utilizado
-condicional, execução, incrementação 

22-exercício de loops #8 
-OK 

23-funções de arrays 
-métodos disponíveis para os arrays (push() / shift() etc..)

24-Ordenação de arrays 
-funções nativas do JS para ordenação 
-sort() ordena por ordem alfabética crescente 
-reverse() ordena por ordem alfabética descrescente 
-feito exemplo de ordenar dados de objetos que estão dentro de um array 

25-iteração de array 1 
-são métodos nativos do JS que serve para iterar com o array(contar items, filtrar etc...)


módulo 3 - Eventos e manipulação de DOM 

1-o que é DOM? 
-document object model - interface de programação para os documentos HTML 

2-selecionando elementos 1 
-usando o document.getElementByATagName(), captura o dados de uma tag HTML 

3-selecionando elementos 2
-usando os comandos de capturar o text de um id, class ou tag 

4-eventos de clique 
-realiando ações e funções de click 

5-manipulando elementos 1 
-utilizando métodos do javascript para manipular elementos do HTML navegando pela cascata de tags 

6-manipulando elementos 2 
-inserindo items de HTML utilizando método prepend append e appendChild do JS 

7-manipulando elementos 3
-manipulando elementos do HTML usando o before e o after, utilizando o for para gerar uma lista dinamica 

8-manipulando atributos 
-feita a manipulação de atributos das tags HTML usando métodos JS: getAttribute, setAttribute e hasAttribute 

9-manipulando o CSS 
-feito testes usando os métodos JS style e em seguida informando qual tipo de alteração CSS será usada 

10-trabalhando com classes 
-manipulando o elemento de uma class de uma tag, usando classList e em seguida usando o metodo de manipulação 

11-eventos de teclado 1 
-usando os métodos de captar ações de teclado no JS, keyup, keydown, keypress 

12-eventos de teclado 2
-usando os métodos do JS para capturar e exibir qual tecla foi pressionada 

13-exercício:lista de tarefas simples 
-ok 

14-resolução: lista de tarefas simples 
-realizado o exercício 


módulo 4 - objetos e orientação a objetos 

1-o que é OO?
-orientação a objeto = é uma simulação de um objeto do mundo real (objeto pessoa, objeto carro)
-cria-se objetos e um se comunica com o outro, os dados são agrupados em um objeto 

2-programação orientada a objeto no javascript 
-objetos seriam atributos de uma class(coisa, ex: pessoa, carro), e o objeto seriam: José, Paulo, etc
-programação procedural = programação com sequencia de código (mais rústica)
-programação funcional (FP) = usando a orientação a objetos 
-orientação a objeto através de classes e de funções 

3-classes: Construtor e This 
-todo objeto tem: propriedades e métodos (características e ações)
-constructor() é uma função usada todas as vezes para inicializar uma classe 
-this se refere a este mesmo, a quem chama a esta class, refere-se ao próprio objeto

4-Classes: Instâncias 
-instanciando variáveis a propriedades da classe, para poder atribuir um valor ao seu atributo e exibir 

5-Classes: Action 
-Action = ações = métodos = funções 
-atribuindo ações(funções) a uma class para poder ser usado para um objeto 
-a função pode ser chamada logo em seguida que se chama o objeto que detém as propriedades do objeto, 
    que por sua vez contém a referida função. 

6-classes: Getter e Setter
-são funções
-nem sempre são necessários 
-Getter = pegar 
-Setter = setar, inserir

7-Classes: Herança 
-quando uma sub class, herda propriedades e métodos de uma class mãe, 
    através do uso do extends. 
-usado o super() para puxar propriedades e métodos da class mãe 

8-Classes: variável/método estático 
-static =propriedades do tipo static, não podem ser chamadas do jeito comum, mesmo após serem instanciadas. 
    Para que possam ser chamadas e utilizadas, deve-se em vez de this, usar a chamada da própria class.
    A variável static é feita justamente para não ser alterada. 
    A variável static não é instanciada quando sua classe é instanciada. 

9-Classes: Factory 
-O conceito de factory, é o uso de uma função simples, que por sua vez, cria um objeto instanciando um class.
    Ou seja, ae ser usada essa function de factory, ela retorna o objeto pronto.
    Lembrando que do mesmo jeito, ela passa por todo processo de instanciar a class em uma variável, 
    atribuir valores a propriedades ou métodos, e por final, retornar o objeto pronto. 
-Criar uma factory para uma uma class, nada mais é do que criar uma simples função que retorna o 
    objeto já pronto. 

10-projeto: criador de formulário 1 
-criado uma class Input, a qual possibilita a criação de tags HTML dinâmicas, sendo instanciadas e postas 
    dentro de variáveis. 

11-projeto: criador de formulário 2
-criado funções para inserir os items criados, dinâmicamente dentro da div já criada no HTML 

12-projeto: criador de formulário 3-ok


módulo 5 - introdução Geral 

1-aviso importante 
-ok 

2-introdução 
-javascript é uma linguagem de programação para web 

3-onde colocar o código JS? 
-pode ser inserido no próprio arquivo HTML, no final do arquivo, ou, 
    em um arquivo separado.

4-como usar o console 
-o console.log, serve para imprimir algo no developer tool do navegador 

5-formas de mostrar (output) 
-document.write();
-.innerHTML 
-window.alert('')
-console.log()

6-variáveis(1/2)
-varável serve para armazenar dados, como se fosse um recipiente 

7-condicionais (1/2)
-executa ou deixa de executar algo, até que determinada condição seja atendida 

8-condicionais (2/2)
-exemplo de condicionais: if, else if e else 

9-variáveis(2/2)
-var, let e const 
-var = tem escopo global de acesso 
-let = tem escopo local de acesso 
-const = não pode ser alterada após definida e atribuído valor 


módulo 6 - conceitos básicos 

1-evento de click 
-existem diversos métodos nativos de click, sempre começando com 'on'

2-evento de teclado 
-existem diversos métodos nativos de key, sempre começando com 'on'

3-mudanças de estilos 
-ok 

4-array 
listagem numerada
-serve para poder colocar uma lista de itens na mesma variável 
-utiliza-se de métodos JS para incrementar ou decrementar um array de maneira dinamica

5-objetos 1/2 
-listagem nomeada, é necessário especificar o nome e o valor do item. com teste

6-objetos 2/2
- ok 

7-projeto menu de navegação 
-usado métodos: contains, remove e add; 
-usado o CSS direto no JS para fazer alterações
    ex: style.width 

8-switch 
-feito exemplo de case com dias da semana 

9-loop for 
-PAREI 6:30

















